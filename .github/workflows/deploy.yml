# .github/workflows/deploy.yml
name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  REGION: us-central1
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      # Authenticate to GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          workload_identity_provider: ${{ secrets.GCP_WI_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Set up gcloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      # ========================
      # PHASE 1: Initial Setup
      # ========================
      - name: Initialize Terraform
        run: |
          cd infrastructure
          terraform init -backend=false

      # ========================
      # PHASE 2: Create State Bucket
      # ========================
      - name: Create State Resources
        run: |
          cd infrastructure
          terraform apply -auto-approve \
            -target=google_storage_bucket.tf_state \
            -target=google_project_service.required_apis \
            -var="project_id=$PROJECT_ID"

      # ========================
      # PHASE 3: Migrate State
      # ========================
      - name: Configure Remote State
        run: |
          cd infrastructure
          STATE_BUCKET=$(terraform output -raw state_bucket)
          cat > backend.tf <<EOF
          terraform {
            backend "gcs" {
              bucket = "$STATE_BUCKET"
              prefix = "terraform/state"
            }
          }
          EOF
          terraform init -migrate-state -force-copy

      # ========================
      # PHASE 4: Full Infrastructure
      # ========================
      - name: Deploy Core Infrastructure
        run: |
          cd infrastructure
          terraform apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="image_tag=init"

      # ========================
      # PHASE 5: Build & Push Container
      # ========================
      - name: Configure Docker Auth
        run: gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

      - name: Build and Push Image
        run: |
          cd app
          docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/insight-agent/insight-agent:$GITHUB_SHA .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/insight-agent/insight-agent:$GITHUB_SHA

      # ========================
      # PHASE 6: Final Deployment
      # ========================
      - name: Deploy Cloud Run Service
        run: |
          cd infrastructure
          terraform apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="image_tag=$GITHUB_SHA"

      # ========================
      # PHASE 7: Verification
      # ========================
      - name: Verify Deployment
        run: |
          SERVICE_URL=$(cd infrastructure && terraform output -raw cloud_run_url)
          curl -s $SERVICE_URL/analyze -H "Content-Type: application/json" \
            -d '{"text":"Testing deployment"}' | jq .