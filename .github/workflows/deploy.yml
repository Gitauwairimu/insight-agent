name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3
      
      # Authenticate to GCP
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      
      # Set up gcloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      # First apply Terraform to create infrastructure
      - name: Terraform Apply Infrastructure
        run: |
          cd infrastructure
          terraform init
          terraform apply -auto-approve \
            -target=google_project_service.required_apis \
            -target=google_artifact_registry_repository.insight_agent \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="image_tag=init"
      
      # Configure Docker auth after infrastructure exists
      - name: Configure Docker auth
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet
      
      # Build and push image to now-existing repository
      - name: Build and push Docker image
        run: |
          cd app
          docker build -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/insight-agent/insight-agent:$GITHUB_SHA .
          docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/insight-agent/insight-agent:$GITHUB_SHA
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: us-central1
      
      # Final Terraform apply with the new image
      - name: Terraform Apply Deployment
        run: |
          cd infrastructure
          terraform apply -auto-approve \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="image_tag=$GITHUB_SHA"